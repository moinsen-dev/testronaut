"""Initial schema creation

Revision ID: 001_initial
Create Date: 2024-03-24

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = '001_initial'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'clitool',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('version', sa.String(), nullable=True),
        sa.Column('install_command', sa.String(), nullable=True),
        sa.Column('help_text', sa.String(), nullable=True),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_clitool_id'), 'clitool', ['id'], unique=False)
    op.create_index(op.f('ix_clitool_name'), 'clitool', ['name'], unique=False)

    op.create_table(
        'command',
        sa.Column('cli_tool_id', sa.String(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('syntax', sa.String(), nullable=True),
        sa.Column('help_text', sa.String(), nullable=True),
        sa.Column('is_subcommand', sa.Boolean(), nullable=False),
        sa.Column('parent_command_id', sa.String(), nullable=True),
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['cli_tool_id'], ['clitool.id'], ),
        sa.ForeignKeyConstraint(['parent_command_id'], ['command.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_command_cli_tool_id'), 'command', ['cli_tool_id'], unique=False)
    op.create_index(op.f('ix_command_id'), 'command', ['id'], unique=False)
    op.create_index(op.f('ix_command_name'), 'command', ['name'], unique=False)
    op.create_index(op.f('ix_command_parent_command_id'), 'command', ['parent_command_id'], unique=False)

    op.create_table(
        'testplan',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('cli_tool_id', sa.String(), nullable=False),
        sa.Column('status', sa.String(), nullable=False),
        sa.Column('metadata', sa.JSON(), nullable=False),
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['cli_tool_id'], ['clitool.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_testplan_cli_tool_id'), 'testplan', ['cli_tool_id'], unique=False)
    op.create_index(op.f('ix_testplan_id'), 'testplan', ['id'], unique=False)
    op.create_index(op.f('ix_testplan_name'), 'testplan', ['name'], unique=False)

    op.create_table(
        'argument',
        sa.Column('command_id', sa.String(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('required', sa.Boolean(), nullable=False),
        sa.Column('default_value', sa.String(), nullable=True),
        sa.Column('value_type', sa.String(), nullable=True),
        sa.Column('position', sa.Integer(), nullable=False),
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['command_id'], ['command.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_argument_command_id'), 'argument', ['command_id'], unique=False)
    op.create_index(op.f('ix_argument_id'), 'argument', ['id'], unique=False)

    op.create_table(
        'example',
        sa.Column('command_id', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('command_line', sa.String(), nullable=False),
        sa.Column('expected_output', sa.String(), nullable=True),
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['command_id'], ['command.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_example_command_id'), 'example', ['command_id'], unique=False)
    op.create_index(op.f('ix_example_id'), 'example', ['id'], unique=False)

    op.create_table(
        'option',
        sa.Column('command_id', sa.String(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('short_form', sa.String(), nullable=True),
        sa.Column('long_form', sa.String(), nullable=True),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('required', sa.Boolean(), nullable=False),
        sa.Column('default_value', sa.String(), nullable=True),
        sa.Column('value_type', sa.String(), nullable=True),
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['command_id'], ['command.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_option_command_id'), 'option', ['command_id'], unique=False)
    op.create_index(op.f('ix_option_id'), 'option', ['id'], unique=False)

    op.create_table(
        'testcase',
        sa.Column('test_plan_id', sa.String(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('command_id', sa.String(), nullable=True),
        sa.Column('command_line', sa.String(), nullable=False),
        sa.Column('expected_output', sa.String(), nullable=True),
        sa.Column('expected_return_code', sa.Integer(), nullable=False),
        sa.Column('timeout_seconds', sa.Integer(), nullable=False),
        sa.Column('status', sa.String(), nullable=False),
        sa.Column('metadata', sa.JSON(), nullable=False),
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['command_id'], ['command.id'], ),
        sa.ForeignKeyConstraint(['test_plan_id'], ['testplan.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_testcase_command_id'), 'testcase', ['command_id'], unique=False)
    op.create_index(op.f('ix_testcase_id'), 'testcase', ['id'], unique=False)
    op.create_index(op.f('ix_testcase_test_plan_id'), 'testcase', ['test_plan_id'], unique=False)

    op.create_table(
        'testreport',
        sa.Column('test_plan_id', sa.String(), nullable=False),
        sa.Column('execution_time', sa.DateTime(), nullable=False),
        sa.Column('duration_ms', sa.Integer(), nullable=False),
        sa.Column('total_tests', sa.Integer(), nullable=False),
        sa.Column('passed_tests', sa.Integer(), nullable=False),
        sa.Column('failed_tests', sa.Integer(), nullable=False),
        sa.Column('error_tests', sa.Integer(), nullable=False),
        sa.Column('skipped_tests', sa.Integer(), nullable=False),
        sa.Column('summary', sa.String(), nullable=True),
        sa.Column('details', sa.JSON(), nullable=False),
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['test_plan_id'], ['testplan.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_testreport_id'), 'testreport', ['id'], unique=False)
    op.create_index(op.f('ix_testreport_test_plan_id'), 'testreport', ['test_plan_id'], unique=False)

    op.create_table(
        'dependency',
        sa.Column('test_case_id', sa.String(), nullable=False),
        sa.Column('dependency_type', sa.String(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('value', sa.String(), nullable=True),
        sa.Column('is_satisfied', sa.Boolean(), nullable=False),
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['test_case_id'], ['testcase.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dependency_id'), 'dependency', ['id'], unique=False)
    op.create_index(op.f('ix_dependency_test_case_id'), 'dependency', ['test_case_id'], unique=False)

    op.create_table(
        'testresult',
        sa.Column('test_case_id', sa.String(), nullable=False),
        sa.Column('execution_time', sa.DateTime(), nullable=False),
        sa.Column('duration_ms', sa.Integer(), nullable=False),
        sa.Column('return_code', sa.Integer(), nullable=False),
        sa.Column('status', sa.String(), nullable=False),
        sa.Column('output', sa.String(), nullable=True),
        sa.Column('error_message', sa.String(), nullable=True),
        sa.Column('environment', sa.JSON(), nullable=False),
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['test_case_id'], ['testcase.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_testresult_id'), 'testresult', ['id'], unique=False)
    op.create_index(op.f('ix_testresult_test_case_id'), 'testresult', ['test_case_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_testresult_test_case_id'), table_name='testresult')
    op.drop_index(op.f('ix_testresult_id'), table_name='testresult')
    op.drop_table('testresult')
    op.drop_index(op.f('ix_dependency_test_case_id'), table_name='dependency')
    op.drop_index(op.f('ix_dependency_id'), table_name='dependency')
    op.drop_table('dependency')
    op.drop_index(op.f('ix_testreport_test_plan_id'), table_name='testreport')
    op.drop_index(op.f('ix_testreport_id'), table_name='testreport')
    op.drop_table('testreport')
    op.drop_index(op.f('ix_testcase_test_plan_id'), table_name='testcase')
    op.drop_index(op.f('ix_testcase_id'), table_name='testcase')
    op.drop_index(op.f('ix_testcase_command_id'), table_name='testcase')
    op.drop_table('testcase')
    op.drop_index(op.f('ix_option_id'), table_name='option')
    op.drop_index(op.f('ix_option_command_id'), table_name='option')
    op.drop_table('option')
    op.drop_index(op.f('ix_example_id'), table_name='example')
    op.drop_index(op.f('ix_example_command_id'), table_name='example')
    op.drop_table('example')
    op.drop_index(op.f('ix_argument_id'), table_name='argument')
    op.drop_index(op.f('ix_argument_command_id'), table_name='argument')
    op.drop_table('argument')
    op.drop_index(op.f('ix_testplan_name'), table_name='testplan')
    op.drop_index(op.f('ix_testplan_id'), table_name='testplan')
    op.drop_index(op.f('ix_testplan_cli_tool_id'), table_name='testplan')
    op.drop_table('testplan')
    op.drop_index(op.f('ix_command_parent_command_id'), table_name='command')
    op.drop_index(op.f('ix_command_name'), table_name='command')
    op.drop_index(op.f('ix_command_id'), table_name='command')
    op.drop_index(op.f('ix_command_cli_tool_id'), table_name='command')
    op.drop_table('command')
    op.drop_index(op.f('ix_clitool_name'), table_name='clitool')
    op.drop_index(op.f('ix_clitool_id'), table_name='clitool')
    op.drop_table('clitool')
    # ### end Alembic commands ###